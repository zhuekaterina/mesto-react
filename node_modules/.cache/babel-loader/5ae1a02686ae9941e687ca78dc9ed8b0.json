{"ast":null,"code":"import { apiInfo } from './utils.js';\n\nclass Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getResStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this.getResStatus(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this.getResStatus(res));\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  editUserInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        about: `${about}`\n      })\n    }).then(res => this.getResStatus(res));\n  }\n\n  addNewCard({\n    name,\n    link\n  }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        link: `${link}`,\n        name: `${name}`\n      })\n    }).then(res => this.getResStatus(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this.getResStatus(res));\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this.getResStatus(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this.getResStatus(res));\n  }\n\n  editAvatar({\n    avatar\n  }) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${avatar}`\n      })\n    }).then(res => this.getResStatus(res));\n  }\n\n}\n\nexport const api = new Api(apiInfo);","map":{"version":3,"sources":["/Users/ekaterinazhukova/mesto-react/src/utils/api.js"],"names":["apiInfo","Api","constructor","baseUrl","headers","_baseUrl","_headers","getResStatus","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","getAppInfo","all","editUserInfo","name","about","method","body","JSON","stringify","addNewCard","link","deleteCard","cardId","addLike","deleteLike","editAvatar","avatar","api"],"mappings":"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","sourcesContent":["import { apiInfo } from './utils.js';\n\nclass Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    getResStatus(res) {\n        if (res.ok) {\n            return res.json();\n          }\n          return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    getAppInfo() {\n        return Promise.all([ this.getUserInfo(), this.getInitialCards() ]);\n    }\n\n    editUserInfo({name, about}) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n              name: `${name}`,\n              about: `${about}`\n            })\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    addNewCard({name, link}) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                link: `${link}`,\n                name: `${name}`\n            })\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n    \n    editAvatar({avatar}) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n              avatar: `${avatar}`\n            })\n        })\n        .then(res => this.getResStatus(res));\n    }\n}\n\nexport const api = new Api(apiInfo);"]},"metadata":{},"sourceType":"module"}