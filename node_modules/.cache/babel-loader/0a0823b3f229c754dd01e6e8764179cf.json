{"ast":null,"code":"import _classCallCheck from\"/Users/ekaterinazhukova/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ekaterinazhukova/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass\";import{apiInfo}from'./utils.js';var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"getResStatus\",value:function getResStatus(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(function(res){return _this.getResStatus(res);});}},{key:\"getInitialCards\",value:function getInitialCards(){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(function(res){return _this2.getResStatus(res);});}},{key:\"getAppInfo\",value:function getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()]);}},{key:\"editUserInfo\",value:function editUserInfo(_ref2){var _this3=this;var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:\"\".concat(name),about:\"\".concat(about)})}).then(function(res){return _this3.getResStatus(res);});}},{key:\"addNewCard\",value:function addNewCard(_ref3){var _this4=this;var name=_ref3.name,link=_ref3.link;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({link:\"\".concat(link),name:\"\".concat(name)})}).then(function(res){return _this4.getResStatus(res);});}},{key:\"deleteCard\",value:function deleteCard(cardId){var _this5=this;return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(function(res){return _this5.getResStatus(res);});}},{key:\"addLike\",value:function addLike(cardId){var _this6=this;return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this._headers}).then(function(res){return _this6.getResStatus(res);});}},{key:\"deleteLike\",value:function deleteLike(cardId){var _this7=this;return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(function(res){return _this7.getResStatus(res);});}},{key:\"editAvatar\",value:function editAvatar(_ref4){var _this8=this;var avatar=_ref4.avatar;return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:\"\".concat(avatar)})}).then(function(res){return _this8.getResStatus(res);});}}]);return Api;}();export var api=new Api(apiInfo);","map":{"version":3,"sources":["/Users/ekaterinazhukova/mesto-react/src/utils/api.js"],"names":["apiInfo","Api","baseUrl","headers","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","getResStatus","all","getUserInfo","getInitialCards","name","about","method","body","JSON","stringify","link","cardId","avatar","api"],"mappings":"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","sourcesContent":["import { apiInfo } from './utils.js';\n\nclass Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    getResStatus(res) {\n        if (res.ok) {\n            return res.json();\n          }\n          return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    getAppInfo() {\n        return Promise.all([ this.getUserInfo(), this.getInitialCards() ]);\n    }\n\n    editUserInfo({name, about}) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n              name: `${name}`,\n              about: `${about}`\n            })\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    addNewCard({name, link}) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                link: `${link}`,\n                name: `${name}`\n            })\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(res => this.getResStatus(res));\n    }\n    \n    editAvatar({avatar}) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n              avatar: `${avatar}`\n            })\n        })\n        .then(res => this.getResStatus(res));\n    }\n}\n\nexport const api = new Api(apiInfo);"]},"metadata":{},"sourceType":"module"}